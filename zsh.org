#+TITLE: Zsh config
#+STARTUP: content

* Installation Script
#+BEGIN_SRC sh :tangle sh/install-zsh.sh
#!/bin/zsh

if [[ $(which zsh) != $SHELL ]]; then
  echo 'Error: $SHELL ought to be '"$(which zsh), but is: $SHELL"
  echo 'To set the default shell, run: chsh -s $(which zsh)'
  echo 'Exiting now...'
  exit
fi

if [[ ! -a ~/.zshenv ]]; then
  echo 'Writing ~/.zshenv'
  echo 'source ~/.zsh/zshenv' > ~/.zshenv
fi

mkdir -p ~/.zsh
ln -svf $PWD/out/zsh/zshenv ~/.zsh/zshenv
ln -svf $PWD/submodules/antigen ~/.zsh
ln -svf $PWD/out/zsh/antigenrc ~/.zsh/antigenrc
ln -svf $PWD/out/zsh/agkozakrc ~/.zsh/agkozakrc
ln -svf $PWD/out/zsh/zshrc ~/.zsh/.zshrc
#+END_SRC

* Config
** =zshenv=
Unless the =NO_RCS= option is set, =.zshenv= runs for every zsh (login or not, interactive or non-interactive).

Most everything can and should live in =.zshrc=. Those few settings I also want in non-interactive shells belong here. For example, when Emacs runs commands from inside it, such as =grep=, only =.zshenv= will be sourced ([[https://zsh.sourceforge.io/Guide/zshguide02.html][source]]).

#+BEGIN_SRC sh :tangle out/zsh/zshenv
export ZDOTDIR=${ZDOTDIR:-~/.zsh}
#+END_SRC

Note: =:-= sets the variable only if it is not set or empty.

** =antigenrc=
#+BEGIN_SRC sh :tangle out/zsh/antigenrc
################################################################
# Remember to benchmark changes!
# for i in $(seq 1 10); do /usr/bin/time $SHELL -i -c exit; done
################################################################

# Load oh-my-zsh library
antigen use oh-my-zsh

# Load bundles from the default repo (oh-my-zsh)
antigen bundle git # Quick
antigen bundle docker # Quick

# Load bundles from external repos
antigen bundle zsh-users/zsh-completions # Quick
antigen bundle zsh-users/zsh-autosuggestions # Quick
antigen bundle zsh-users/zsh-syntax-highlighting # 0.04 seconds
antigen bundle agkozak/agkozak-zsh-prompt # My theme; Quick

# Tell Antigen that you're done
antigen apply
#+END_SRC

** =agkozakrc=
Agkozak prompt is a highly customizable and stable zsh prompt.

If =pwd= depth exceeds the given threshold, trim it:
#+BEGIN_SRC sh :tangle out/zsh/agkozakrc
AGKOZAK_PROMPT_DIRTRIM=3
#+END_SRC

Customize the Git status symbols. In order:
- '⇣⇡' :: diverged
- '⇣' :: behind
- '⇡' :: ahead
- '+' :: new file(s)
- 'x' :: deleted
- '!' :: modified
- '>' :: renamed
- '?' :: untracked
- '$' :: stashed change(s)
#+BEGIN_SRC sh :tangle out/zsh/agkozakrc
AGKOZAK_CUSTOM_SYMBOLS=( '⇣⇡' '⇣' '⇡' '+' 'x' '!' '>' '?' '$' )
#+END_SRC

Make sure the zsh/terminfo module is loaded. If the terminal has support for 256
colors, use a softer color palette (Zenburn).
there are 256 colors.
#+BEGIN_SRC sh :tangle out/zsh/agkozakrc
(( ${+modules[zsh/terminfo]} )) || zmodload zsh/terminfo
if (( ${terminfo[colors]:-0} >= 256 )); then
  AGKOZAK_COLORS_USER_HOST=108
  AGKOZAK_COLORS_PATH=116
  AGKOZAK_COLORS_BRANCH_STATUS=228
  AGKOZAK_COLORS_EXIT_STATUS=174
  AGKOZAK_COLORS_CMD_EXEC_TIME=245
  AGKOZAK_COLORS_VIRTUALENV=188
  AGKOZAK_COLORS_BG_STRING=223
fi
#+END_SRC

#+BEGIN_SRC sh :tangle out/zsh/agkozakrc
# Insert a blank line between command executions
AGKOZAK_CUSTOM_PROMPT=$'\n'

#
# Second line, write user
#
AGKOZAK_CUSTOM_PROMPT+=$'%F{yellow}λ ' # A pretty lambda to indicate the next prompt
# %n is the username; %1v is the @+hostname, which isn't displayed locally
AGKOZAK_CUSTOM_PROMPT+=$'%(!.%S%B.%B%F{${AGKOZAK_COLORS_USER_HOST}})%n%1v%(!.%b%s.%f%b)'
AGKOZAK_CUSTOM_PROMPT+='%(10V. %F{${AGKOZAK_COLORS_VIRTUALENV}}[%10v]%f.)'     # %10v --> virtual environment
AGKOZAK_CUSTOM_PROMPT+=$'\n'

#
# Third line of the prompt
#
AGKOZAK_CUSTOM_PROMPT+='%B%F{${AGKOZAK_COLORS_PATH}}%2v%f%b'                   # %2v --> working directory
AGKOZAK_CUSTOM_PROMPT+='%(3V.%F{${AGKOZAK_COLORS_BRANCH_STATUS}}%3v%f.)'       # %3v --> git branch + indicator
AGKOZAK_CUSTOM_PROMPT+='%(9V. %F{${AGKOZAK_COLORS_CMD_EXEC_TIME}}%b%9v%b%f.)'  # %9v --> pretty-printed execution time
AGKOZAK_CUSTOM_PROMPT+=$' %(?..%B%F{${AGKOZAK_COLORS_EXIT_STATUS}}(%?%)%f%b )' # exit status
AGKOZAK_CUSTOM_PROMPT+='%F{88}❯%f '                                            # mark the start of the zle with a red side caret
#+END_SRC

Display the time on the right edge of the prompt. RPROMPT doesn't support multiline.
#+BEGIN_SRC sh :tangle out/zsh/agkozakrc
#
# Right-hand side of prompt
#
AGKOZAK_CUSTOM_RPROMPT='%(1j.%F{${AGKOZAK_COLORS_BG_STRING}}[%j]%f.) '         # Background job count
AGKOZAK_CUSTOM_RPROMPT+='%*'                                                   # Current time (HH:MM:SS)
#+END_SRC

** =~/.zshrc=
*** Antigen
#+BEGIN_SRC sh :tangle out/zsh/zshrc
# Load antigen source, my antigen config, and my chosen theme
source $ZDOTDIR/antigen/bin/antigen.zsh
antigen init $ZDOTDIR/antigenrc
source $ZDOTDIR/agkozakrc
#+END_SRC

*** Git
I lean heavily on [[https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/git/git.plugin.zsh][ohmyzsh/git.plugin.zsh]], and sprinkle any additions below:

#+BEGIN_SRC sh :tangle out/zsh/zshrc
# Git
# Plugin: https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/git/git.plugin.zsh
alias gs="git status" # Overwrites ghostscript, which is likely why OMZ chose 'gst'
#+END_SRC

*** Source ~/.zshrc
Until I've merged and migrated all my zsh code, simply source a =.zshrc= that won't be overwritten when I tangle =zsh.org=.

#+BEGIN_SRC sh :tangle out/zsh/zshrc
source ~/.zshrc
#+END_SRC

* Tasks
